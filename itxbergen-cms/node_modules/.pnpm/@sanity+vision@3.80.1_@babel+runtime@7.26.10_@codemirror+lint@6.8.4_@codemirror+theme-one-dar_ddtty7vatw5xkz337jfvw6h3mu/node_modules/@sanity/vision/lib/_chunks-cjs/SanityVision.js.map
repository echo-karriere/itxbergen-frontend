{"version":3,"file":"SanityVision.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/getBlobUrl.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = [\n  'v1',\n  'vX',\n  'v2021-03-25',\n  'v2021-10-21',\n  'v2022-03-07',\n  'v2025-02-19',\n  `v${new Date().toISOString().split('T')[0]}`,\n]\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {\n  EditorSelection,\n  type ReactCodeMirrorProps,\n  type ReactCodeMirrorRef,\n} from '@uiw/react-codemirror'\nimport {forwardRef, useCallback, useImperativeHandle, useRef, useState} from 'react'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport interface VisionCodeMirrorHandle {\n  resetEditorContent: (newContent: string) => void\n}\n\nexport const VisionCodeMirror = forwardRef<\n  VisionCodeMirrorHandle,\n  Pick<ReactCodeMirrorProps, 'onChange'> & {\n    initialValue: ReactCodeMirrorProps['value']\n  }\n>((props, ref) => {\n  // The value prop is only passed for initial value, and is not updated when the parent component updates the value.\n  // If you need to update the value, use the resetEditorContent function.\n  const [initialValue] = useState(props.initialValue)\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n  const codeMirrorRef = useRef<ReactCodeMirrorRef>(null)\n\n  const resetEditorContent = useCallback((newContent: string) => {\n    const editorView = codeMirrorRef.current?.view\n    if (!editorView) return\n\n    const currentDoc = editorView.state.doc.toString()\n    if (newContent !== currentDoc) {\n      editorView.dispatch({\n        changes: {from: 0, to: currentDoc.length, insert: newContent},\n        selection: EditorSelection.cursor(newContent.length), // Place cursor at end\n      })\n    }\n  }, [])\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      resetEditorContent,\n    }),\n    [resetEditorContent],\n  )\n\n  return (\n    <EditorRoot>\n      <CodeMirror\n        ref={codeMirrorRef}\n        basicSetup={false}\n        theme={theme}\n        extensions={codemirrorExtensions}\n        value={initialValue}\n        onChange={props.onChange}\n      />\n    </EditorRoot>\n  )\n})\n\n// Add display name\nVisionCodeMirror.displayName = 'VisionCodeMirror'\n","export const SUPPORTED_PERSPECTIVES = ['pinnedRelease', 'raw', 'published', 'drafts'] as const\n\nexport type SupportedPerspective = (typeof SUPPORTED_PERSPECTIVES)[number]\n\n/**\n * Virtual perspectives are recognised by Vision, but do not concretely reflect the names of real\n * perspectives. Virtual perspectives are transformed into real perspectives before being used to\n * interact with data.\n *\n * For example, the `pinnedRelease` virtual perspective is transformed to the real perspective\n * currently pinned in Studio.\n */\nexport const VIRTUAL_PERSPECTIVES = ['pinnedRelease'] as const\n\nexport type VirtualPerspective = (typeof VIRTUAL_PERSPECTIVES)[number]\n\nexport function isSupportedPerspective(p: string): p is SupportedPerspective {\n  return SUPPORTED_PERSPECTIVES.includes(p as SupportedPerspective)\n}\n\nexport function isVirtualPerspective(\n  maybeVirtualPerspective: unknown,\n): maybeVirtualPerspective is VirtualPerspective {\n  return (\n    typeof maybeVirtualPerspective === 'string' &&\n    VIRTUAL_PERSPECTIVES.includes(maybeVirtualPerspective as VirtualPerspective)\n  )\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string | string[]> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror, type VisionCodeMirrorHandle} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n  editorRef: React.RefObject<VisionCodeMirrorHandle | null>\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return (\n    <VisionCodeMirror\n      initialValue={props.value || defaultValue}\n      onChange={handleChange}\n      ref={props.editorRef}\n    />\n  )\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {\n  Badge,\n  Box,\n  Button,\n  Card,\n  type CardTone,\n  Inline,\n  Popover,\n  Stack,\n  Text,\n  useClickOutsideEvent,\n} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nconst Dot = styled.div<{tone: CardTone}>`\n  width: 4px;\n  height: 4px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--card-bg-color);\n  background-color: ${({tone}) => `var(--card-badge-${tone}-dot-color)`};\n`\n\nconst SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION = false\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n            <Card>\n              <Stack space={2}>\n                <Box>\n                  <Badge tone=\"primary\">{t('label.new')}</Badge>\n                </Box>\n                <Text muted>\n                  <Translate\n                    t={t}\n                    i18nKey=\"settings.perspective.preview-drafts-renamed-to-drafts.description\"\n                  />\n                </Text>\n              </Stack>\n            </Card>\n            {SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION ? (\n              <Card>\n                <Badge tone=\"caution\">{t('label.new')}</Badge>\n                <Card>\n                  <Text muted>\n                    <Translate t={t} i18nKey=\"settings.perspectives.new-default.description\" />\n                  </Text>\n                </Card>\n              </Card>\n            ) : null}\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        paddingRight={1}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      >\n        <Dot tone={SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION ? 'caution' : 'primary'} />\n      </Button>\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {LinkIcon} from '@sanity/icons'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\nimport {useDataset} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown; datasetName: string}): React.JSX.Element {\n  const {data, datasetName} = props\n  const workspaceDataset = useDataset()\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JsonInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n          interactiveLabel={workspaceDataset === datasetName ? DocumentEditLabel : undefined}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction DocumentEditLabel(props: {value: string; isKey: boolean; keypath: string}) {\n  if (props.isKey || (!props.keypath.endsWith('_id') && !props.keypath.endsWith('_ref'))) {\n    return null\n  }\n\n  return (\n    <IntentLink intent=\"edit\" params={{id: props.value}}>\n      <LinkIcon />\n    </IntentLink>\n  )\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport {SplitPane} from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type SanityClient,\n} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ChangeEvent,\n  type ComponentType,\n  createRef,\n  Fragment,\n  PureComponent,\n  type RefObject,\n  useMemo,\n} from 'react'\nimport isEqual from 'react-fast-compare'\nimport {type PerspectiveContextValue, type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror, type VisionCodeMirrorHandle} from '../codemirror/VisionCodeMirror'\nimport {\n  isSupportedPerspective,\n  isVirtualPerspective,\n  SUPPORTED_PERSPECTIVES,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: SupportedPerspective | undefined\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement | null>\n  _queryEditorContainer: RefObject<HTMLDivElement | null>\n  _paramsEditorContainer: RefObject<HTMLDivElement | null>\n  _operationUrlElement: RefObject<HTMLInputElement | null>\n  _customApiVersionElement: RefObject<HTMLInputElement | null>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n  _editorQueryRef: RefObject<VisionCodeMirrorHandle | null>\n  _editorParamsRef: RefObject<VisionCodeMirrorHandle | null>\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    const perspective = this._localStorage.get<SupportedPerspective | undefined>(\n      'perspective',\n      undefined,\n    )\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n    this._editorQueryRef = createRef()\n    this._editorParamsRef = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: getActivePerspective({\n        visionPerspective: perspective,\n        pinnedPerspective: this.props.pinnedPerspective,\n      }),\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setPerspective = this.setPerspective.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  componentDidUpdate(prevProps: Readonly<VisionGuiProps>): void {\n    if (hasPinnedPerspectiveChanged(prevProps.pinnedPerspective, this.props.pinnedPerspective)) {\n      if (hasPinnedPerspective(this.props.pinnedPerspective)) {\n        this.setPerspective('pinnedRelease')\n      } else {\n        this.setPerspective(undefined)\n      }\n    }\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective =\n      isSupportedPerspective(parts.options.perspective) &&\n      !isVirtualPerspective(parts.options.perspective)\n        ? parts.options.perspective\n        : undefined\n\n    if (\n      perspective &&\n      (!isSupportedPerspective(parts.options.perspective) ||\n        isVirtualPerspective(parts.options.perspective))\n    ) {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-paste-unsupported-perspective',\n        status: 'warning',\n        title: 'Perspective in pasted url is currently not supported. Falling back to \"raw\"',\n      })\n    }\n\n    evt.preventDefault()\n\n    const query = parts.query\n    const rawParams = JSON.stringify(parts.params, null, 2)\n    this._editorQueryRef.current?.resetEditorContent(query)\n    this._editorParamsRef.current?.resetEditorContent(rawParams)\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query,\n        params: parts.params,\n        rawParams,\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: getActivePerspective({\n            visionPerspective: this.state.perspective,\n            pinnedPerspective: this.props.pinnedPerspective,\n          }),\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    this.setPerspective(perspective === 'default' ? undefined : perspective)\n  }\n\n  setPerspective(perspective: string | undefined): void {\n    if (perspective !== undefined && !isSupportedPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: getActivePerspective({\n          visionPerspective: this.state.perspective,\n          pinnedPerspective: this.props.pinnedPerspective,\n        }),\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome'], includeAllVersions: true})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string | string[]> = {}\n    if (this.state.perspective) {\n      urlQueryOpts.perspective =\n        getActivePerspective({\n          visionPerspective: this.state.perspective,\n          pinnedPerspective: this.props.pinnedPerspective,\n        }) ?? []\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) => {\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          })\n        },\n        error: (error) => {\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          })\n        },\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t, pinnedPerspective} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n        data-testid=\"vision-root\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n                <Select value={perspective || 'default'} onChange={this.handleChangePerspective}>\n                  {SUPPORTED_PERSPECTIVES.map((perspectiveName) => {\n                    if (perspectiveName === 'pinnedRelease') {\n                      return (\n                        <Fragment key=\"pinnedRelease\">\n                          <PinnedReleasePerspectiveOption\n                            pinnedPerspective={pinnedPerspective}\n                            t={t}\n                          />\n                          <option key=\"default\" value=\"default\">\n                            {t('settings.perspectives.default')}\n                          </option>\n                          <hr />\n                        </Fragment>\n                      )\n                    }\n                    return <option key={perspectiveName}>{perspectiveName}</option>\n                  })}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer\n                  display=\"flex\"\n                  ref={this._queryEditorContainer}\n                  data-testid=\"vision-query-editor\"\n                >\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror\n                      initialValue={query}\n                      onChange={this.handleQueryChange}\n                      ref={this._editorQueryRef}\n                    />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card\n                    flex={1}\n                    tone={hasValidParams ? 'default' : 'critical'}\n                    data-testid=\"params-editor\"\n                  >\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor\n                      value={rawParams}\n                      onChange={this.handleParamsChange}\n                      editorRef={this._editorParamsRef}\n                    />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\" data-testid=\"vision-result\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} datasetName={dataset} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} datasetName={dataset} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n\nfunction getActivePerspective({\n  visionPerspective,\n  pinnedPerspective,\n}: {\n  visionPerspective: ClientPerspective | SupportedPerspective | undefined\n  pinnedPerspective: PerspectiveContextValue\n}): ClientPerspective | undefined {\n  if (visionPerspective !== 'pinnedRelease') {\n    return visionPerspective\n  }\n\n  if (pinnedPerspective.perspectiveStack.length !== 0) {\n    return pinnedPerspective.perspectiveStack\n  }\n\n  if (typeof pinnedPerspective.selectedPerspectiveName !== 'undefined') {\n    return [pinnedPerspective.selectedPerspectiveName]\n  }\n\n  return undefined\n}\n\nconst PinnedReleasePerspectiveOption: ComponentType<{\n  pinnedPerspective: PerspectiveContextValue\n  t: TFunction\n}> = ({pinnedPerspective, t}) => {\n  const name =\n    typeof pinnedPerspective.selectedPerspective === 'object'\n      ? pinnedPerspective.selectedPerspective.metadata.title\n      : pinnedPerspective.selectedPerspectiveName\n\n  const label = hasPinnedPerspective(pinnedPerspective)\n    ? `(${t('settings.perspectives.pinned-release-label')})`\n    : t('settings.perspectives.pinned-release-label')\n\n  const text = useMemo(\n    () => [name, label].filter((value) => typeof value !== 'undefined').join(' '),\n    [label, name],\n  )\n\n  return (\n    <option value=\"pinnedRelease\" disabled={!hasPinnedPerspective(pinnedPerspective)}>\n      {text}\n    </option>\n  )\n}\n\nfunction hasPinnedPerspective({selectedPerspectiveName}: PerspectiveContextValue): boolean {\n  return typeof selectedPerspectiveName !== 'undefined'\n}\n\nfunction hasPinnedPerspectiveChanged(\n  previous: PerspectiveContextValue,\n  next: PerspectiveContextValue,\n): boolean {\n  const hasPerspectiveStackChanged = !isEqual(previous.perspectiveStack, next.perspectiveStack)\n\n  return (\n    previous.selectedPerspectiveName !== next.selectedPerspectiveName || hasPerspectiveStackChanged\n  )\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex, useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient, usePerspective} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const perspective = usePerspective()\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} pinnedPerspective={perspective} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","Date","toISOString","split","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","jsx","Spinner","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","forwardRef","ref","initialValue","sanityTheme","useTheme","codeMirrorRef","useRef","Symbol","for","newContent","editorView","current","view","currentDoc","state","doc","toString","dispatch","changes","from","to","length","insert","EditorSelection","resetEditorContent","useImperativeHandle","onChange","CodeMirror","displayName","SUPPORTED_PERSPECTIVES","VIRTUAL_PERSPECTIVES","isSupportedPerspective","p","includes","isVirtualPerspective","maybeVirtualPerspective","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","Array","isArray","trim","isPlainObject","obj","prototype","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","err","message","replace","validateApiVersion","apiVersion","parseableApiVersion","toUpperCase","test","isNaN","defaultValue","ParamsEditor","useTranslation","visionLocaleNamespace","eventFromValue","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","editorRef","parsedParams","Error","validationError","undefined","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","Dot","tone","PerspectivePopover","open","setOpen","buttonRef","popoverRef","_temp","handleClick","useClickOutsideEvent","Inline","Text","Card","t8","Badge","t9","Translate","t10","jsxs","Stack","t11","t12","t13","t14","t15","t16","Button","HelpCircleIcon","t17","Popover","o","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","css","lru","LRU","maxSize","ResultView","data","datasetName","workspaceDataset","useDataset","isRecord","DocumentEditLabel","JsonInspector","isExpanded","toggleExpanded","isKey","keypath","endsWith","id","LinkIcon","IntentLink","keyPath","cached","segments","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","Tooltip","SaveJsonButton","Root","Flex","Header","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","size","allowResize","minSize","Math","min","max","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","lastQuery","lastParams","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_editorQueryRef","_editorParamsRef","_client","withConfig","getActivePerspective","visionPerspective","pinnedPerspective","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","isValidApiVersion","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","setPerspective","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","componentDidUpdate","prevProps","hasPinnedPerspectiveChanged","hasPinnedPerspective","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","toast","push","closable","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","toLowerCase","focus","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","includeAllVersions","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","console","render","hasResult","jsonUrl","csvUrl","Grid","Select","map","ds","TextInput","perspectiveName","Fragment","CopyIcon","SplitPane","ErrorOutlineIcon","Hotkeys","StopIcon","PlayIcon","SaveResultButtons","perspectiveStack","selectedPerspectiveName","PinnedReleasePerspectiveOption","selectedPerspective","metadata","label","join","previous","hasPerspectiveStackChanged","isEqual","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","numRetries","getDerivedStateFromError","handleRetryRender","prev","handleRetryWithCacheClear","children","withCacheClear","Container","Heading","SanityVision","useClient","usePerspective","tool"],"mappings":"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"}
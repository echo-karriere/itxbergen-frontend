import type { Blueprint, BlueprintError, BlueprintStack } from '../../utils/types.js';
export declare function readBlueprintOnDisk({ blueprintPath, getStack, }?: {
    blueprintPath?: string;
    getStack?: boolean;
}): Promise<{
    fileInfo: {
        path: string;
        fileName: string;
        extension: string;
    };
    parsedBlueprint: Blueprint;
    errors: BlueprintError[];
    projectId?: string;
    stackId?: string;
    deployedStack?: BlueprintStack;
}>;
/** @experimental */ export declare function updateBlueprintMetadata({ blueprintPath, projectId, stackId, }: {
    blueprintPath?: string;
    projectId: string;
    stackId: string;
}): Promise<void>;
export declare function writeBlueprintConfig({ blueprintPath, projectId, stackId, }: {
    blueprintPath?: string;
    projectId: string;
    stackId: string;
}): void;
